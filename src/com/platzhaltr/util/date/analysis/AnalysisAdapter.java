/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.platzhaltr.util.date.analysis;

import java.util.*;
import com.platzhaltr.util.date.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    public void caseANextEntry(ANextEntry node)
    {
        defaultCase(node);
    }

    public void caseARelativeEntry(ARelativeEntry node)
    {
        defaultCase(node);
    }

    public void caseADateEntry(ADateEntry node)
    {
        defaultCase(node);
    }

    public void caseARepeatingEntry(ARepeatingEntry node)
    {
        defaultCase(node);
    }

    public void caseAMondayRelative(AMondayRelative node)
    {
        defaultCase(node);
    }

    public void caseAThuesdayRelative(AThuesdayRelative node)
    {
        defaultCase(node);
    }

    public void caseAWednesdayRelative(AWednesdayRelative node)
    {
        defaultCase(node);
    }

    public void caseATuersdayRelative(ATuersdayRelative node)
    {
        defaultCase(node);
    }

    public void caseAFridayRelative(AFridayRelative node)
    {
        defaultCase(node);
    }

    public void caseASaturdayRelative(ASaturdayRelative node)
    {
        defaultCase(node);
    }

    public void caseASundayRelative(ASundayRelative node)
    {
        defaultCase(node);
    }

    public void caseAWeekendRelative(AWeekendRelative node)
    {
        defaultCase(node);
    }

    public void caseAWeekRelative(AWeekRelative node)
    {
        defaultCase(node);
    }

    public void caseAMonthRelative(AMonthRelative node)
    {
        defaultCase(node);
    }

    public void caseAYearRelative(AYearRelative node)
    {
        defaultCase(node);
    }

    public void caseALatinDate(ALatinDate node)
    {
        defaultCase(node);
    }

    public void caseAJanuaryDate(AJanuaryDate node)
    {
        defaultCase(node);
    }

    public void caseAFebruaryDate(AFebruaryDate node)
    {
        defaultCase(node);
    }

    public void caseAMarchDate(AMarchDate node)
    {
        defaultCase(node);
    }

    public void caseAAprilDate(AAprilDate node)
    {
        defaultCase(node);
    }

    public void caseAMayDate(AMayDate node)
    {
        defaultCase(node);
    }

    public void caseAJuneDate(AJuneDate node)
    {
        defaultCase(node);
    }

    public void caseAJulyDate(AJulyDate node)
    {
        defaultCase(node);
    }

    public void caseAAugustDate(AAugustDate node)
    {
        defaultCase(node);
    }

    public void caseASeptemberDate(ASeptemberDate node)
    {
        defaultCase(node);
    }

    public void caseAOctoberDate(AOctoberDate node)
    {
        defaultCase(node);
    }

    public void caseANovemberDate(ANovemberDate node)
    {
        defaultCase(node);
    }

    public void caseADecemberDate(ADecemberDate node)
    {
        defaultCase(node);
    }

    public void caseAAbsoluteTime(AAbsoluteTime node)
    {
        defaultCase(node);
    }

    public void caseAEveningTime(AEveningTime node)
    {
        defaultCase(node);
    }

    public void caseTNext(TNext node)
    {
        defaultCase(node);
    }

    public void caseTMonday(TMonday node)
    {
        defaultCase(node);
    }

    public void caseTThuesday(TThuesday node)
    {
        defaultCase(node);
    }

    public void caseTWednesday(TWednesday node)
    {
        defaultCase(node);
    }

    public void caseTTuersday(TTuersday node)
    {
        defaultCase(node);
    }

    public void caseTFriday(TFriday node)
    {
        defaultCase(node);
    }

    public void caseTSaturday(TSaturday node)
    {
        defaultCase(node);
    }

    public void caseTSunday(TSunday node)
    {
        defaultCase(node);
    }

    public void caseTEvening(TEvening node)
    {
        defaultCase(node);
    }

    public void caseTWeekend(TWeekend node)
    {
        defaultCase(node);
    }

    public void caseTWeek(TWeek node)
    {
        defaultCase(node);
    }

    public void caseTMonth(TMonth node)
    {
        defaultCase(node);
    }

    public void caseTYear(TYear node)
    {
        defaultCase(node);
    }

    public void caseTEvery(TEvery node)
    {
        defaultCase(node);
    }

    public void caseTJanuary(TJanuary node)
    {
        defaultCase(node);
    }

    public void caseTFebruary(TFebruary node)
    {
        defaultCase(node);
    }

    public void caseTMarch(TMarch node)
    {
        defaultCase(node);
    }

    public void caseTApril(TApril node)
    {
        defaultCase(node);
    }

    public void caseTMay(TMay node)
    {
        defaultCase(node);
    }

    public void caseTJune(TJune node)
    {
        defaultCase(node);
    }

    public void caseTJuly(TJuly node)
    {
        defaultCase(node);
    }

    public void caseTAugust(TAugust node)
    {
        defaultCase(node);
    }

    public void caseTSeptember(TSeptember node)
    {
        defaultCase(node);
    }

    public void caseTOctober(TOctober node)
    {
        defaultCase(node);
    }

    public void caseTNovember(TNovember node)
    {
        defaultCase(node);
    }

    public void caseTDecember(TDecember node)
    {
        defaultCase(node);
    }

    public void caseTDot(TDot node)
    {
        defaultCase(node);
    }

    public void caseTColon(TColon node)
    {
        defaultCase(node);
    }

    public void caseTOn(TOn node)
    {
        defaultCase(node);
    }

    public void caseTIn(TIn node)
    {
        defaultCase(node);
    }

    public void caseTAt(TAt node)
    {
        defaultCase(node);
    }

    public void caseTOclock(TOclock node)
    {
        defaultCase(node);
    }

    public void caseTBlank(TBlank node)
    {
        defaultCase(node);
    }

    public void caseTSubject(TSubject node)
    {
        defaultCase(node);
    }

    public void caseTNumber(TNumber node)
    {
        defaultCase(node);
    }

    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
